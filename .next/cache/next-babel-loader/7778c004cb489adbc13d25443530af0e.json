{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\WEB PROJECTS\\\\SHOPNOW-FRONTEND\\\\my-app\\\\pages\\\\admin\\\\Components\\\\ProductContent\\\\ProductContent.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport FormData from \"form-data\";\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: \"auto\",\n    overflow: \"hidden\"\n  },\n  searchBar: {\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\"\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: \"block\"\n  },\n  addUser: {\n    marginRight: theme.spacing(1)\n  },\n  contentWrapper: {\n    margin: \"40px 16px\"\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0),\n      width: \"100%\",\n      marginBottom: \"15px\"\n    }\n  },\n  large: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n    borderRadius: \"30px\",\n    margin: \"10px\"\n  },\n  button: {\n    width: \"100%\",\n    padding: \"11px\"\n  }\n});\n\nfunction Content(props) {\n  const {\n    classes\n  } = props;\n  const {\n    0: image,\n    1: setImage\n  } = useState(\"\");\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    0: uImage,\n    1: setUImage\n  } = useState(\"\");\n  const {\n    0: uImages,\n    1: setUImages\n  } = useState([]);\n  const {\n    0: spinner,\n    1: setSpinner\n  } = useState(false);\n  const {\n    0: productInput,\n    1: setProductInput\n  } = useState(\"\");\n  const {\n    0: priceInput,\n    1: setPriceInput\n  } = useState(\"\");\n  const {\n    0: quantityInput,\n    1: setQuantityInput\n  } = useState(\"\");\n  const {\n    0: categoryInput,\n    1: setCategoryInput\n  } = useState(\"\");\n  const {\n    0: tagInput,\n    1: setTagInput\n  } = useState(\"\");\n  const {\n    0: tag,\n    1: setTag\n  } = useState([]);\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: imageLimit,\n    1: setImageLimit\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState({\n    msg: \"\",\n    inputType: \"\"\n  }); //fetching all tags for the tag select option\n\n  useEffect(() => {\n    axios.get(\"http://localhost:1000/api/tag/all-tags\", {\n      headers: {\n        \"x-auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWZlNzBjMjRiNWUxYjgyOGM4YmFkYjA5In0sImlhdCI6MTYxNDI4NjE3MX0.Lj0Mmj5g2yEAYqYVOQtVoMszlWs-1v7EO_BKNT-ZgkI\"\n      }\n    }).then(success => {\n      setTag(success.data);\n    }).catch(e => {\n      console.log(e.response.data.msg);\n    });\n  }, []); //fetching all categories for the category select option\n\n  useEffect(() => {\n    axios.get(\"http://localhost:1000/api/category/all-category\", {\n      headers: {\n        \"x-auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWZlNzBjMjRiNWUxYjgyOGM4YmFkYjA5In0sImlhdCI6MTYxMzUwMzY4OSwiZXhwIjoxNjEzODYzNjg5fQ.s6MBDtyOTXIlP1FefTt2bC0qyjW6etsdcoTyztpNBJg\"\n      }\n    }).then(success => {\n      setCategories(success.data); // console.log(success);\n    }).catch(e => {\n      console.log(e.response.data.msg);\n    });\n  }, []);\n\n  const handleCapture = e => {\n    setSpinner(true);\n    const fileReader = new FileReader(); //Displaying image in the UI if it is one\n\n    if (e.target.files.length === 1) {\n      setUImage(e.target.files[0]);\n\n      fileReader.onload = e => {\n        setImage(e.target.result);\n        setSpinner(false);\n        setImageLimit(true);\n      };\n\n      fileReader.readAsDataURL(e.target.files[0]);\n    } else {\n      //Display image in the UI if it less than 3\n      if (e.target.files.length > 3) {\n        setImageLimit(false);\n        setSpinner(false);\n      } else {\n        for (var i = 0; i < e.target.files.length; i++) {\n          const fileReaders = new FileReader();\n\n          fileReaders.onload = e => {\n            setImages(oldArr => [...oldArr, e.target.result]);\n            setSpinner(false);\n            setImageLimit(true);\n          };\n\n          fileReaders.readAsDataURL(e.target.files[i]);\n        }\n\n        var arr = [];\n\n        for (var j = 0; j < e.target.files.length; j++) {\n          arr.push(e.target.files[j]);\n        }\n\n        setUImages(arr);\n      }\n    }\n  };\n\n  const handleInputs = (e, type) => {\n    switch (type) {\n      case \"productName\":\n        var letters = /^[A-Za-z]+$/;\n\n        if (!e.target.value.match(letters)) {\n          setError({\n            msg: \"Product price must be only alphabets\",\n            inputType: \"productName\"\n          });\n        } else if (e.target.value.match(letters)) {\n          setError({});\n        }\n\n        setProductInput(e.target.value);\n        break;\n\n      case \"priceValue\":\n        var numbers = /^[0-9]+$/;\n\n        if (!e.target.value.match(numbers)) {\n          setError({\n            msg: \"Product price must be only numbers\",\n            inputType: \"priceValue\"\n          });\n        } else if (e.target.value.match(numbers)) {\n          setError({});\n        }\n\n        setPriceInput(e.target.value);\n\n      case \"quantityValue\":\n        var numbers = /^[0-9]+$/;\n\n        if (!e.target.value.match(numbers)) {\n          setError({\n            msg: \"Product quantity must be only numbers\",\n            inputType: \"quantityValue\"\n          });\n        } else if (e.target.value.match(numbers)) {\n          setError({});\n        }\n\n        setQuantityInput(e.target.value);\n\n      case \"tagsValue\":\n        setTagInput(e.target.value);\n\n      case \"catValue\":\n        setCategoryInput(e.target.value);\n\n      default:\n        break;\n    } // if (type === \"productName\") {\n    //   var letters = /^[A-Za-z]+$/;\n    //   if (!e.target.value.match(letters)) {\n    //     setError({\n    //       msg: \"Product price must be only alphabets\",\n    //       inputType: \"productName\",\n    //     });\n    //   } else if (e.target.value.match(letters)) {\n    //     setError({});\n    //   }\n    //   setProductInput(e.target.value);\n    // } else if (type === \"priceValue\") {\n    //   var numbers = /^[0-9]+$/;\n    //   if (!e.target.value.match(numbers)) {\n    //     setError({\n    //       msg: \"Product price must be only numbers\",\n    //       inputType: \"priceValue\",\n    //     });\n    //   } else if (e.target.value.match(numbers)) {\n    //     setError({});\n    //   }\n    //   setPriceInput(e.target.value);\n    // } else if (type === \"quantityValue\") {\n    //   var numbers = /^[0-9]+$/;\n    //   if (!e.target.value.match(numbers)) {\n    //     setError({\n    //       msg: \"Product quantity must be only numbers\",\n    //       inputType: \"quantityValue\",\n    //     });\n    //   } else if (e.target.value.match(numbers)) {\n    //     setError({});\n    //   }\n    //   setQuantityInput(e.target.value);\n    // } else if (type === \"tagsValue\") {\n    //   setTagInput(e.target.value);\n    // } else if (type === \"catValue\") {\n    //   setCategoryInput(e.target.value);\n    // }\n\n  };\n\n  const validateInputs = () => {\n    if (productInput && priceInput && quantityInput && categoryInput && tagInput && imageLimit) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const onSubmitHandler = () => {\n    let data = new FormData();\n    data.append(\"name\", \"productInput\");\n    data.append(\"category\", \"categoryInput\");\n    data.append(\"tag\", \"tagInput\");\n    data.append(\"image\", uImage);\n\n    for (var x = 0; x < uImages.length; x++) {\n      data.append(\"image\", uImages[x]);\n    } // // formData.append('postedBy', postData.content);\n    // // formData.append('rating', postData.content);\n    // // formData.append('price', postData.content);\n    // // formData.append('quantity', postData.content);\n    // console.log(JSON.stringify(data));\n\n\n    axios.post(\"http://localhost:1000/api/product/add-product\", data, {\n      headers: {\n        \"x-auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWZlNzBjMjRiNWUxYjgyOGM4YmFkYjA5In0sImlhdCI6MTYxNDI4NjE3MX0.Lj0Mmj5g2yEAYqYVOQtVoMszlWs-1v7EO_BKNT-ZgkI\",\n        accept: \"application/json\",\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(success => {\n      console.log(success);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Add product name\",\n        variant: \"outlined\",\n        value: productInput,\n        onChange: e => handleInputs(e, \"productName\"),\n        error: error.msg && error.inputType === \"productName\" ? true : false,\n        helperText: error.msg && error.inputType === \"productName\" ? error.msg : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Add a price\",\n        variant: \"outlined\",\n        type: \"number\",\n        value: priceInput,\n        onChange: e => handleInputs(e, \"priceValue\"),\n        error: error.msg && error.inputType === \"priceValue\" ? true : false,\n        helperText: error.msg && error.inputType === \"priceValue\" ? error.msg : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Add the quantity of product\",\n        variant: \"outlined\",\n        type: \"number\",\n        value: quantityInput,\n        onChange: e => handleInputs(e, \"quantityValue\"),\n        error: error.msg && error.inputType === \"quantityValue\" ? true : false,\n        helperText: error.msg && error.inputType === \"quantityValue\" ? error.msg : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-select-currency-native\",\n        select: true,\n        helperText: \"Add a tag\",\n        SelectProps: {\n          native: true\n        },\n        variant: \"outlined\",\n        onFocus: e => handleInputs(e, \"tagsValue\"),\n        onChange: e => handleInputs(e, \"tagsValue\"),\n        children: tag.map((tags, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tags.tag,\n          children: tags.tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-select-currency-native\",\n        select: true // label=\"Add tag\"\n        ,\n        helperText: \"Add a category\",\n        SelectProps: {\n          native: true\n        },\n        variant: \"outlined\",\n        onFocus: e => handleInputs(e, \"catValue\"),\n        onChange: e => handleInputs(e, \"catValue\"),\n        children: categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.category,\n          children: category.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        style: {\n          display: \"none\"\n        },\n        id: \"icon-button-photo\",\n        onChange: handleCapture,\n        type: \"file\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"icon-button-photo\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"*Upload a picture(s) of the product. Max: 3 picture*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), spinner ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AvatarGroup, {\n        max: 3,\n        children: [image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: image,\n            src: image,\n            className: classes.large\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => {\n              setImage(\"\");\n              setImageLimit(false);\n            },\n            style: {\n              backgroundColor: \"#616161\",\n              width: \"30px\",\n              height: \"30px\",\n              borderRadius: \"100%\",\n              color: \"white\",\n              textAlign: \"center\",\n              marginLeft: \"-40px\",\n              zIndex: \"3\",\n              paddingTop: \"4.8px\",\n              cursor: \"pointer\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : \"\", images ? images.map((previewImages, i) =>\n        /*#__PURE__*/\n        // <img width=\"50\" height=\"200\" src={images[i]} />\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: images[i],\n            src: images[i],\n            className: classes.large\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => {\n              const delResult = images.filter(img => img != images[i]);\n              setImages(delResult);\n\n              if (images.length === 1) {\n                setImageLimit(false);\n              }\n            },\n            style: {\n              backgroundColor: \"#616161\",\n              width: \"34px\",\n              height: \"34px\",\n              borderRadius: \"100%\",\n              color: \"white\",\n              textAlign: \"center\",\n              marginLeft: \"-40px\",\n              zIndex: \"3\",\n              paddingTop: \"4.8px\",\n              cursor: \"pointer\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: onSubmitHandler,\n      disableRipple: true // disabled={!validateInputs()}\n      ,\n      children: \"Upload Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Content);","map":{"version":3,"sources":["D:/WEB PROJECTS/SHOPNOW-FRONTEND/my-app/pages/admin/Components/ProductContent/ProductContent.js"],"names":["React","useState","useEffect","PropTypes","withStyles","Typography","TextField","CloseIcon","IconButton","PhotoCamera","Avatar","AvatarGroup","CircularProgress","Card","Button","axios","FormData","styles","theme","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","display","addUser","marginRight","spacing","contentWrapper","root","width","marginBottom","large","height","borderRadius","button","padding","Content","props","classes","image","setImage","images","setImages","uImage","setUImage","uImages","setUImages","spinner","setSpinner","productInput","setProductInput","priceInput","setPriceInput","quantityInput","setQuantityInput","categoryInput","setCategoryInput","tagInput","setTagInput","tag","setTag","categories","setCategories","imageLimit","setImageLimit","error","setError","msg","inputType","get","headers","then","success","data","catch","e","console","log","response","handleCapture","fileReader","FileReader","target","files","length","onload","result","readAsDataURL","i","fileReaders","oldArr","arr","j","push","handleInputs","type","letters","value","match","numbers","validateInputs","onSubmitHandler","append","x","post","accept","native","map","tags","category","backgroundColor","color","textAlign","marginLeft","zIndex","paddingTop","cursor","previewImages","delResult","filter","img","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport FormData from \"form-data\";\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    maxWidth: 936,\r\n    margin: \"auto\",\r\n    overflow: \"hidden\",\r\n  },\r\n  searchBar: {\r\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n  },\r\n  searchInput: {\r\n    fontSize: theme.typography.fontSize,\r\n  },\r\n  block: {\r\n    display: \"block\",\r\n  },\r\n  addUser: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  contentWrapper: {\r\n    margin: \"40px 16px\",\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0),\r\n      width: \"100%\",\r\n      marginBottom: \"15px\",\r\n    },\r\n  },\r\n  large: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    borderRadius: \"30px\",\r\n    margin: \"10px\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    padding: \"11px\",\r\n  },\r\n});\r\nfunction Content(props) {\r\n  const { classes } = props;\r\n  const [image, setImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [uImage, setUImage] = useState(\"\");\r\n  const [uImages, setUImages] = useState([]);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [productInput, setProductInput] = useState(\"\");\r\n  const [priceInput, setPriceInput] = useState(\"\");\r\n  const [quantityInput, setQuantityInput] = useState(\"\");\r\n  const [categoryInput, setCategoryInput] = useState(\"\");\r\n  const [tagInput, setTagInput] = useState(\"\");\r\n  const [tag, setTag] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [imageLimit, setImageLimit] = useState(false);\r\n  const [error, setError] = useState({ msg: \"\", inputType: \"\" });\r\n\r\n  //fetching all tags for the tag select option\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:1000/api/tag/all-tags\", {\r\n        headers: {\r\n          \"x-auth-token\":\r\n            \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWZlNzBjMjRiNWUxYjgyOGM4YmFkYjA5In0sImlhdCI6MTYxNDI4NjE3MX0.Lj0Mmj5g2yEAYqYVOQtVoMszlWs-1v7EO_BKNT-ZgkI\",\r\n        },\r\n      })\r\n      .then((success) => {\r\n        setTag(success.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.response.data.msg);\r\n      });\r\n  }, []);\r\n\r\n  //fetching all categories for the category select option\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:1000/api/category/all-category\", {\r\n        headers: {\r\n          \"x-auth-token\":\r\n            \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWZlNzBjMjRiNWUxYjgyOGM4YmFkYjA5In0sImlhdCI6MTYxMzUwMzY4OSwiZXhwIjoxNjEzODYzNjg5fQ.s6MBDtyOTXIlP1FefTt2bC0qyjW6etsdcoTyztpNBJg\",\r\n        },\r\n      })\r\n      .then((success) => {\r\n        setCategories(success.data);\r\n        // console.log(success);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.response.data.msg);\r\n      });\r\n  }, []);\r\n\r\n  const handleCapture = (e) => {\r\n    setSpinner(true);\r\n    const fileReader = new FileReader();\r\n\r\n    //Displaying image in the UI if it is one\r\n    if (e.target.files.length === 1) {\r\n      setUImage(e.target.files[0]);\r\n      fileReader.onload = (e) => {\r\n        setImage(e.target.result);\r\n        setSpinner(false);\r\n        setImageLimit(true);\r\n      };\r\n      fileReader.readAsDataURL(e.target.files[0]);\r\n    } else {\r\n      //Display image in the UI if it less than 3\r\n      if (e.target.files.length > 3) {\r\n        setImageLimit(false);\r\n        setSpinner(false);\r\n      } else {\r\n        for (var i = 0; i < e.target.files.length; i++) {\r\n          const fileReaders = new FileReader();\r\n          fileReaders.onload = (e) => {\r\n            setImages((oldArr) => [...oldArr, e.target.result]);\r\n            setSpinner(false);\r\n            setImageLimit(true);\r\n          };\r\n          fileReaders.readAsDataURL(e.target.files[i]);\r\n        }\r\n        var arr = [];\r\n        for (var j = 0; j < e.target.files.length; j++) {\r\n          arr.push(e.target.files[j]);\r\n        }\r\n        setUImages(arr);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInputs = (e, type) => {\r\n    switch (type) {\r\n      case \"productName\":\r\n        var letters = /^[A-Za-z]+$/;\r\n        if (!e.target.value.match(letters)) {\r\n          setError({\r\n            msg: \"Product price must be only alphabets\",\r\n            inputType: \"productName\",\r\n          });\r\n        } else if (e.target.value.match(letters)) {\r\n          setError({});\r\n        }\r\n        setProductInput(e.target.value);\r\n        break;\r\n      case \"priceValue\":\r\n        var numbers = /^[0-9]+$/;\r\n        if (!e.target.value.match(numbers)) {\r\n          setError({\r\n            msg: \"Product price must be only numbers\",\r\n            inputType: \"priceValue\",\r\n          });\r\n        } else if (e.target.value.match(numbers)) {\r\n          setError({});\r\n        }\r\n        setPriceInput(e.target.value);\r\n      case \"quantityValue\":\r\n        var numbers = /^[0-9]+$/;\r\n        if (!e.target.value.match(numbers)) {\r\n          setError({\r\n            msg: \"Product quantity must be only numbers\",\r\n            inputType: \"quantityValue\",\r\n          });\r\n        } else if (e.target.value.match(numbers)) {\r\n          setError({});\r\n        }\r\n        setQuantityInput(e.target.value);\r\n      case \"tagsValue\":\r\n        setTagInput(e.target.value);\r\n      case \"catValue\":\r\n        setCategoryInput(e.target.value);\r\n      default:\r\n        break;\r\n    }\r\n    // if (type === \"productName\") {\r\n    //   var letters = /^[A-Za-z]+$/;\r\n    //   if (!e.target.value.match(letters)) {\r\n    //     setError({\r\n    //       msg: \"Product price must be only alphabets\",\r\n    //       inputType: \"productName\",\r\n    //     });\r\n    //   } else if (e.target.value.match(letters)) {\r\n    //     setError({});\r\n    //   }\r\n    //   setProductInput(e.target.value);\r\n    // } else if (type === \"priceValue\") {\r\n    //   var numbers = /^[0-9]+$/;\r\n    //   if (!e.target.value.match(numbers)) {\r\n    //     setError({\r\n    //       msg: \"Product price must be only numbers\",\r\n    //       inputType: \"priceValue\",\r\n    //     });\r\n    //   } else if (e.target.value.match(numbers)) {\r\n    //     setError({});\r\n    //   }\r\n    //   setPriceInput(e.target.value);\r\n    // } else if (type === \"quantityValue\") {\r\n    //   var numbers = /^[0-9]+$/;\r\n    //   if (!e.target.value.match(numbers)) {\r\n    //     setError({\r\n    //       msg: \"Product quantity must be only numbers\",\r\n    //       inputType: \"quantityValue\",\r\n    //     });\r\n    //   } else if (e.target.value.match(numbers)) {\r\n    //     setError({});\r\n    //   }\r\n    //   setQuantityInput(e.target.value);\r\n    // } else if (type === \"tagsValue\") {\r\n    //   setTagInput(e.target.value);\r\n    // } else if (type === \"catValue\") {\r\n    //   setCategoryInput(e.target.value);\r\n    // }\r\n  };\r\n  const validateInputs = () => {\r\n    if (\r\n      productInput &&\r\n      priceInput &&\r\n      quantityInput &&\r\n      categoryInput &&\r\n      tagInput &&\r\n      imageLimit\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  const onSubmitHandler = () => {\r\n    let data = new FormData();\r\n    data.append(\"name\", \"productInput\");\r\n    data.append(\"category\", \"categoryInput\");\r\n    data.append(\"tag\", \"tagInput\");\r\n    data.append(\"image\", uImage);\r\n    for (var x = 0; x < uImages.length; x++) {\r\n      data.append(\"image\", uImages[x]);\r\n    }\r\n    // // formData.append('postedBy', postData.content);\r\n    // // formData.append('rating', postData.content);\r\n    // // formData.append('price', postData.content);\r\n    // // formData.append('quantity', postData.content);\r\n    // console.log(JSON.stringify(data));\r\n\r\n    axios\r\n      .post(\"http://localhost:1000/api/product/add-product\", data, {\r\n        headers: {\r\n          \"x-auth-token\":\r\n            \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWZlNzBjMjRiNWUxYjgyOGM4YmFkYjA5In0sImlhdCI6MTYxNDI4NjE3MX0.Lj0Mmj5g2yEAYqYVOQtVoMszlWs-1v7EO_BKNT-ZgkI\",\r\n          accept: \"application/json\",\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((success) => {\r\n        console.log(success);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <Typography variant=\"h5\">Add Product</Typography>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Add product name\"\r\n          variant=\"outlined\"\r\n          value={productInput}\r\n          onChange={(e) => handleInputs(e, \"productName\")}\r\n          error={error.msg && error.inputType === \"productName\" ? true : false}\r\n          helperText={\r\n            error.msg && error.inputType === \"productName\" ? error.msg : \"\"\r\n          }\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Add a price\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          value={priceInput}\r\n          onChange={(e) => handleInputs(e, \"priceValue\")}\r\n          error={error.msg && error.inputType === \"priceValue\" ? true : false}\r\n          helperText={\r\n            error.msg && error.inputType === \"priceValue\" ? error.msg : \"\"\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Add the quantity of product\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          value={quantityInput}\r\n          onChange={(e) => handleInputs(e, \"quantityValue\")}\r\n          error={\r\n            error.msg && error.inputType === \"quantityValue\" ? true : false\r\n          }\r\n          helperText={\r\n            error.msg && error.inputType === \"quantityValue\" ? error.msg : \"\"\r\n          }\r\n        />\r\n        <TextField\r\n          id=\"outlined-select-currency-native\"\r\n          select\r\n          helperText=\"Add a tag\"\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          variant=\"outlined\"\r\n          onFocus={(e) => handleInputs(e, \"tagsValue\")}\r\n          onChange={(e) => handleInputs(e, \"tagsValue\")}\r\n        >\r\n          {tag.map((tags, i) => (\r\n            <option value={tags.tag}>{tags.tag}</option>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          id=\"outlined-select-currency-native\"\r\n          select\r\n          // label=\"Add tag\"\r\n          helperText=\"Add a category\"\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          variant=\"outlined\"\r\n          onFocus={(e) => handleInputs(e, \"catValue\")}\r\n          onChange={(e) => handleInputs(e, \"catValue\")}\r\n        >\r\n          {categories.map((category, i) => (\r\n            <option value={category.category}>{category.category}</option>\r\n          ))}\r\n        </TextField>\r\n        <input\r\n          accept=\"image/*\"\r\n          style={{ display: \"none\" }}\r\n          id=\"icon-button-photo\"\r\n          onChange={handleCapture}\r\n          type=\"file\"\r\n          multiple\r\n        />\r\n        <br />\r\n        <label htmlFor=\"icon-button-photo\">\r\n          <Typography variant=\"body2\">\r\n            *Upload a picture(s) of the product. Max: 3 picture*\r\n          </Typography>\r\n          <IconButton color=\"primary\" component=\"span\">\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n\r\n        <br />\r\n        {spinner ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <AvatarGroup max={3}>\r\n            {image ? (\r\n              <>\r\n                <Avatar alt={image} src={image} className={classes.large} />\r\n                <Card\r\n                  onClick={() => {\r\n                    setImage(\"\");\r\n                    setImageLimit(false);\r\n                  }}\r\n                  style={{\r\n                    backgroundColor: \"#616161\",\r\n                    width: \"30px\",\r\n                    height: \"30px\",\r\n                    borderRadius: \"100%\",\r\n                    color: \"white\",\r\n                    textAlign: \"center\",\r\n                    marginLeft: \"-40px\",\r\n                    zIndex: \"3\",\r\n                    paddingTop: \"4.8px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <CloseIcon />\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {images\r\n              ? images.map((previewImages, i) => (\r\n                  // <img width=\"50\" height=\"200\" src={images[i]} />\r\n                  <>\r\n                    <Avatar\r\n                      alt={images[i]}\r\n                      src={images[i]}\r\n                      className={classes.large}\r\n                    />\r\n                    <Card\r\n                      onClick={() => {\r\n                        const delResult = images.filter(\r\n                          (img) => img != images[i]\r\n                        );\r\n                        setImages(delResult);\r\n                        if (images.length === 1) {\r\n                          setImageLimit(false);\r\n                        }\r\n                      }}\r\n                      style={{\r\n                        backgroundColor: \"#616161\",\r\n                        width: \"34px\",\r\n                        height: \"34px\",\r\n                        borderRadius: \"100%\",\r\n                        color: \"white\",\r\n                        textAlign: \"center\",\r\n                        marginLeft: \"-40px\",\r\n                        zIndex: \"3\",\r\n                        paddingTop: \"4.8px\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                    >\r\n                      <CloseIcon />\r\n                    </Card>\r\n                  </>\r\n                ))\r\n              : \"\"}\r\n          </AvatarGroup>\r\n        )}\r\n      </form>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={onSubmitHandler}\r\n        disableRipple={true}\r\n        // disabled={!validateInputs()}\r\n      >\r\n        Upload Product\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Content);\r\n"]},"metadata":{},"sourceType":"module"}