{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\WEB PROJECTS\\\\SHOPNOW-FRONTEND\\\\my-app\\\\pages\\\\admin\\\\Components\\\\ProductContent\\\\ProductContent.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: \"auto\",\n    overflow: \"hidden\"\n  },\n  searchBar: {\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\"\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: \"block\"\n  },\n  addUser: {\n    marginRight: theme.spacing(1)\n  },\n  contentWrapper: {\n    margin: \"40px 16px\"\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0),\n      width: \"100%\",\n      marginBottom: \"15px\"\n    }\n  },\n  large: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n    borderRadius: \"30px\",\n    margin: \"10px\"\n  },\n  button: {\n    width: \"100%\",\n    padding: \"11px\"\n  }\n});\n\nfunction Content(props) {\n  const {\n    classes\n  } = props;\n  const {\n    0: image,\n    1: setImage\n  } = useState(\"\");\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    0: spinner,\n    1: setSpinner\n  } = useState(false);\n  const {\n    0: productInput,\n    1: setProductInput\n  } = useState(\"\");\n  const {\n    0: priceInput,\n    1: setPriceInput\n  } = useState(\"\");\n  const {\n    0: quantityInput,\n    1: setQuantityInput\n  } = useState(\"\");\n  const {\n    0: categoryInput,\n    1: setCategoryInput\n  } = useState(\"\");\n  const {\n    0: tagInput,\n    1: setTagInput\n  } = useState(\"\");\n\n  const handleCapture = e => {\n    setSpinner(true);\n    const fileReader = new FileReader();\n\n    if (e.target.files.length === 1) {\n      fileReader.onload = e => {\n        setImage(e.target.result);\n        setSpinner(false);\n      };\n\n      fileReader.readAsDataURL(e.target.files[0]);\n    } else {\n      for (var i = 0; i < e.target.files.length; i++) {\n        const fileReaders = new FileReader();\n\n        fileReaders.onload = e => {\n          setImages(oldArr => [...oldArr, e.target.result]);\n          setSpinner(false);\n        };\n\n        fileReaders.readAsDataURL(e.target.files[i]);\n      }\n    }\n  };\n\n  const handleInputs = (e, type) => {\n    switch (type) {\n      case \"productName\":\n        setProductInput(e.target.value);\n\n      default:\n        break;\n    }\n  };\n\n  console.log(productInput);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Add product name\",\n        variant: \"outlined\",\n        value: productInput,\n        onChange: e => handleInputs(\"productName\", e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Add a price\",\n        variant: \"outlined\" // onChange={onInputHandler}\n        // value={input}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Add the quantity of product\",\n        variant: \"outlined\" // onChange={onInputHandler}\n        // value={input}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-select-currency-native\",\n        select: true,\n        label: \"Add category\" // value={currency}\n        // onChange={handleChange}\n        ,\n        SelectProps: {\n          native: true\n        },\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 20,\n          children: \"Twenty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 30,\n          children: \"Thirty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-select-currency-native\",\n        select: true,\n        label: \"Add tag\" // value={currency}\n        // onChange={handleChange}\n        ,\n        SelectProps: {\n          native: true\n        },\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 20,\n          children: \"Twenty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 30,\n          children: \"Thirty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        style: {\n          display: \"none\"\n        },\n        id: \"icon-button-photo\",\n        onChange: handleCapture,\n        type: \"file\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"icon-button-photo\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"*Upload a picture(s) of the product. Max: 3 picture*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), spinner ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AvatarGroup, {\n        max: 3,\n        children: [image ? /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: image,\n          src: image,\n          className: classes.large\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this) : \"\", images ? images.map((previewImages, i) =>\n        /*#__PURE__*/\n        // <img width=\"50\" height=\"200\" src={images[i]} />\n        _jsxDEV(Avatar, {\n          alt: images[i],\n          src: images[i],\n          className: classes.large\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }, this)) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button // onClick={isEditable ? onSubmitHandlerEdit : onSubmitHandler}\n      ,\n      disableRipple: true,\n      disabled: true,\n      children: \"Upload Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Content);","map":{"version":3,"sources":["D:/WEB PROJECTS/SHOPNOW-FRONTEND/my-app/pages/admin/Components/ProductContent/ProductContent.js"],"names":["React","useState","PropTypes","Paper","withStyles","Typography","TextField","Select","IconButton","PhotoCamera","Avatar","AvatarGroup","CircularProgress","Skeleton","Button","styles","theme","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","display","addUser","marginRight","spacing","contentWrapper","root","width","marginBottom","large","height","borderRadius","button","padding","Content","props","classes","image","setImage","images","setImages","spinner","setSpinner","productInput","setProductInput","priceInput","setPriceInput","quantityInput","setQuantityInput","categoryInput","setCategoryInput","tagInput","setTagInput","handleCapture","e","fileReader","FileReader","target","files","length","onload","result","readAsDataURL","i","fileReaders","oldArr","handleInputs","type","value","console","log","native","map","previewImages","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    maxWidth: 936,\r\n    margin: \"auto\",\r\n    overflow: \"hidden\",\r\n  },\r\n  searchBar: {\r\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n  },\r\n  searchInput: {\r\n    fontSize: theme.typography.fontSize,\r\n  },\r\n  block: {\r\n    display: \"block\",\r\n  },\r\n  addUser: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  contentWrapper: {\r\n    margin: \"40px 16px\",\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0),\r\n      width: \"100%\",\r\n      marginBottom: \"15px\",\r\n    },\r\n  },\r\n  large: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    borderRadius: \"30px\",\r\n    margin: \"10px\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    padding: \"11px\",\r\n  },\r\n});\r\n\r\nfunction Content(props) {\r\n  const { classes } = props;\r\n  const [image, setImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [productInput, setProductInput] = useState(\"\");\r\n  const [priceInput, setPriceInput] = useState(\"\");\r\n  const [quantityInput, setQuantityInput] = useState(\"\");\r\n  const [categoryInput, setCategoryInput] = useState(\"\");\r\n  const [tagInput, setTagInput] = useState(\"\");\r\n\r\n  const handleCapture = (e) => {\r\n    setSpinner(true);\r\n    const fileReader = new FileReader();\r\n    if (e.target.files.length === 1) {\r\n      fileReader.onload = (e) => {\r\n        setImage(e.target.result);\r\n        setSpinner(false);\r\n      };\r\n      fileReader.readAsDataURL(e.target.files[0]);\r\n    } else {\r\n      for (var i = 0; i < e.target.files.length; i++) {\r\n        const fileReaders = new FileReader();\r\n        fileReaders.onload = (e) => {\r\n          setImages((oldArr) => [...oldArr, e.target.result]);\r\n          setSpinner(false);\r\n        };\r\n        fileReaders.readAsDataURL(e.target.files[i]);\r\n      }\r\n    }\r\n  };\r\n  const handleInputs = (e, type) => {\r\n    switch (type) {\r\n      case \"productName\":\r\n        setProductInput(e.target.value);\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  console.log(productInput);\r\n  return (\r\n    <React.Fragment>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <Typography variant=\"h5\">Add Product</Typography>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Add product name\"\r\n          variant=\"outlined\"\r\n          value={productInput}\r\n          onChange={(e) => handleInputs(\"productName\", e)}\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Add a price\"\r\n          variant=\"outlined\"\r\n          // onChange={onInputHandler}\r\n          // value={input}\r\n        />\r\n\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Add the quantity of product\"\r\n          variant=\"outlined\"\r\n          // onChange={onInputHandler}\r\n          // value={input}\r\n        />\r\n        <TextField\r\n          id=\"outlined-select-currency-native\"\r\n          select\r\n          label=\"Add category\"\r\n          // value={currency}\r\n          // onChange={handleChange}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </TextField>\r\n\r\n        <TextField\r\n          id=\"outlined-select-currency-native\"\r\n          select\r\n          label=\"Add tag\"\r\n          // value={currency}\r\n          // onChange={handleChange}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </TextField>\r\n        <input\r\n          accept=\"image/*\"\r\n          style={{ display: \"none\" }}\r\n          id=\"icon-button-photo\"\r\n          onChange={handleCapture}\r\n          type=\"file\"\r\n          multiple\r\n        />\r\n        <br />\r\n        <label htmlFor=\"icon-button-photo\">\r\n          <Typography variant=\"body2\">\r\n            *Upload a picture(s) of the product. Max: 3 picture*\r\n          </Typography>\r\n          <IconButton color=\"primary\" component=\"span\">\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n\r\n        <br />\r\n        {spinner ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <AvatarGroup max={3}>\r\n            {image ? (\r\n              <Avatar alt={image} src={image} className={classes.large} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {images\r\n              ? images.map((previewImages, i) => (\r\n                  // <img width=\"50\" height=\"200\" src={images[i]} />\r\n                  <Avatar\r\n                    alt={images[i]}\r\n                    src={images[i]}\r\n                    className={classes.large}\r\n                  />\r\n                ))\r\n              : \"\"}\r\n          </AvatarGroup>\r\n        )}\r\n      </form>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        // onClick={isEditable ? onSubmitHandlerEdit : onSubmitHandler}\r\n        disableRipple={true}\r\n        disabled={true}\r\n      >\r\n        Upload Product\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Content);\r\n"]},"metadata":{},"sourceType":"module"}